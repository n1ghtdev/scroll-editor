{"version":3,"sources":["serviceWorker.ts","components/layout.tsx","modules/types.ts","modules/reducer.ts","utils/generate-scrollbar-styles.ts","components/preview.tsx","components/editor.tsx","components/editor-item.tsx","components/property.tsx","components/controls/select.tsx","components/add-property.tsx","components/controls/input.tsx","components/controls/input-number.tsx","utils/color-palette.ts","components/controls/color-palette-window.tsx","utils/color-utils.ts","components/controls/input-border.tsx","components/controls/input-color.tsx","components/controls/range.tsx","components/controls/input-range.tsx","components/properties.tsx","components/App.tsx","modules/actions.ts","index.tsx"],"names":["Boolean","window","location","hostname","match","ActionTypes","Layout","children","css","initialState","scrollbar","name","props","width","value","active","border","style","color","reducer","state","action","produce","draft","type","UPDATE_PROPERTY","toUpdateProperty","option","payload","ADD_PROPERTY","createProperty","property","propertyValues","propertyName","inset","x","y","spread","blur","changePropertyType","Array","isArray","map","val","isNumber","join","generateScrollbarStyles","options","Object","values","scrollClass","prop","createProperties","pseudoName","properties","pseudoElement","createWebkitPseudoElement","wrapper","placeholder","button","copiedTooltip","textarea","Preview","scrollbarState","React","useState","styles","setStyles","isCopied","setIsCopied","copyRef","useRef","useEffect","className","ref","spellCheck","onClick","e","current","select","document","execCommand","target","focus","setTimeout","Editor","titleStyles","wrapperStyles","EditorItem","title","childrenStyles","Property","Select","onChange","Option","AddProperty","addProperty","selected","setSelected","Input","InputNumber","Number","ColorPalette","canvas","ctx","this","getContext","gradient","createLinearGradient","addColorStop","fillStyle","fillRect","height","imageData","getImageData","data","ColorPaletteWindow","onColorChange","onClose","initialColor","colorPaletteRef","hex","result","exec","length","parseInt","hexToRgb","currentColor","setCurrentColor","toString","padStart","colorPalette","render","unbindEvents","getColor","pageX","getBoundingClientRect","left","pageY","top","rgbArray","throttledOnMousemove","throttle","onMousedown","addEventListener","onMouseup","removeEventListener","contains","stopPropagation","handleClickOutside","bindEvents","borderStyleOptions","InputBorder","isOpen","setIsOpen","handleClose","useCallback","backgroundColor","buttonStyles","inputStyles","InputColor","handleColorChange","slider","rail","track","thumb","Range","max","isMousedown","setIsMousedown","currentRef","clientX","onMousemove","InputRange","min","Properties","updateProperty","inActiveProperties","filter","Math","round","renderProperty","App","useReducer","dispatch","scrollName","updateAction","addAction","item","removeProperty","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c4f3a53e.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","/** @jsx jsx */\nimport React from 'react';\nimport { css, jsx } from '@emotion/core';\n\nconst Layout = ({ children }: { children: React.ReactNode }) => {\n  return (\n    <div\n      css={css`\n        max-width: 1600px;\n        width: 100%;\n        height: 100vh;\n        margin-left: auto;\n        margin-right: auto;\n        padding-left: 15px;\n        padding-right: 15px;\n        display: flex;\n        flex-wrap: wrap;\n      `}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default Layout;\n","export enum ActionTypes {\n  UPDATE_PROPERTY = 'update',\n  ADD_PROPERTY = 'add',\n  REMOVE_PROPERTY = 'remove',\n}\n\nexport type ScrollProperty = {\n  value: any;\n  name: PropertyKeys;\n  active: boolean;\n};\n\nexport type PropertyKeys =\n  | 'width'\n  | 'border'\n  | 'border-radius'\n  | 'background-color'\n  | 'box-shadow';\n\nexport type Properties = { [key in PropertyKeys]: ScrollProperty };\n\nexport type ScrollItem = {\n  name: ScrollKeys;\n  props: { [key: string]: any };\n};\n\nexport type ScrollKeys = 'scrollbar' | 'scrollbar-track' | 'scrollbar-thumb';\n\nexport type State = { [key in ScrollKeys]: ScrollItem };\n","import produce from 'immer';\n\nimport { ActionTypes, State, ScrollKeys } from './types';\nimport { Action } from './actions';\n\nexport const initialState: State = {\n  scrollbar: {\n    name: 'scrollbar',\n    props: { width: { name: 'width', value: 12, active: true } },\n  },\n  'scrollbar-track': {\n    name: 'scrollbar-track',\n    props: {\n      width: {\n        name: 'width',\n        value: 12,\n        active: true,\n      },\n      'background-color': {\n        name: 'background-color',\n        value: '#382e8e',\n        active: true,\n      },\n    },\n  },\n  'scrollbar-thumb': {\n    name: 'scrollbar-thumb',\n    props: {\n      width: {\n        name: 'width',\n        value: 12,\n        active: true,\n      },\n      'background-color': {\n        name: 'background-color',\n        value: '#4834ec',\n        active: true,\n      },\n      'border-radius': {\n        name: 'border-radius',\n        value: 4,\n        active: false,\n      },\n      border: {\n        name: 'border',\n        value: { width: 1, style: 'solid', color: '#fff', active: false },\n      },\n    },\n  },\n};\n\nconst reducer = (state: State, action: Action): State => {\n  return produce(state, (draft) => {\n    switch (action.type) {\n      case ActionTypes.UPDATE_PROPERTY: {\n        const toUpdateProperty =\n          draft[action.option as ScrollKeys].props[action.payload.name];\n        if (!!toUpdateProperty) toUpdateProperty.value = action.payload.value;\n        break;\n      }\n      case ActionTypes.ADD_PROPERTY: {\n        const toUpdateProperty =\n          draft[action.option as ScrollKeys].props[action.payload.name];\n        if (!!toUpdateProperty) toUpdateProperty.active = true;\n        break;\n      }\n      default:\n        return state;\n    }\n  });\n};\n\nexport default reducer;\n","import isNumber from 'is-number';\n\nfunction createWebkitPseudoElement(pseudoName: string, properties: any) {\n  const pseudoElement = `-webkit-${pseudoName}`;\n\n  return `::${pseudoElement}{ ${properties} }`;\n}\n\nfunction changePropertyType(propertyName: string, property: any) {\n  switch (propertyName) {\n    case 'border':\n      return [property.width, property.style, property.color];\n    case 'box-shadow':\n      return [\n        property.inset ? 'inset' : '',\n        property.x,\n        property.y,\n        property.spread,\n        property.blur,\n        property.color,\n      ];\n    default:\n      return property;\n  }\n}\n\nfunction createValue(value: any) {\n  if (Array.isArray(value)) {\n    const values = value.map((val: any) => (isNumber(val) ? `${val}px` : val));\n    const stringifiedValues = values.join(' ');\n\n    return stringifiedValues;\n  } else if (isNumber(value)) {\n    return `${value}px`;\n  }\n  return value;\n}\n\nfunction createProperty(property: any) {\n  const propertyValues = changePropertyType(property.name, property.value);\n\n  return `${[property.name]}: ${createValue(propertyValues)};`;\n}\n\nfunction createProperties(props: any) {\n  return Object.values(props)\n    .map((prop: any) => (prop.active ? createProperty(prop) : ''))\n    .join('\\n');\n}\n\nexport function generateScrollbarStyles(options: any) {\n  if (!options) return null;\n\n  const scrollClasses = Object.values(options);\n\n  const styles = scrollClasses.map((scrollClass: any) => {\n    const props = createProperties(scrollClass.props);\n\n    const pseudoElementWithProps = createWebkitPseudoElement(\n      scrollClass.name,\n      props,\n    );\n\n    return pseudoElementWithProps;\n  });\n\n  return styles;\n}\n","/** @jsx jsx */\nimport React from 'react';\nimport { jsx, css } from '@emotion/core';\nimport { State } from '../modules/types';\nimport { generateScrollbarStyles } from '../utils/generate-scrollbar-styles';\n\ntype Props = {\n  scrollbarState: State;\n};\n\nconst wrapper = css`\n  order: 1;\n  width: 100%;\n  background-color: #3e4a61;\n  margin: 20px 0;\n  border-radius: 10px;\n  height: calc(100vh - 40px);\n  padding: 15px;\n  overflow-y: scroll;\n  color: #000;\n\n  @media (min-width: 960px) {\n    order: 0;\n    width: 50%;\n    margin-right: auto;\n  }\n`;\n\nconst placeholder = css`\n  height: 1000px;\n`;\n\nconst button = css`\n  display: block;\n  margin: 20px auto;\n  border: none;\n  background: #1a2639;\n  color: #fff;\n  padding: 15px 20px;\n  border-radius: 5px;\n  text-transform: uppercase;\n  cursor: pointer;\n  font-weight: bold;\n\n  &:hover {\n    opacity: 0.7;\n  }\n`;\n\nconst copiedTooltip = css`\n  visibility: hidden;\n  opacity: 0;\n  transform: translateY(-25px);\n\n  padding: 7px 0;\n  max-width: 100px;\n  text-align: center;\n  margin: 0 auto;\n  border-radius: 5px;\n  background: #1a2639;\n  color: #fff;\n  position: relative;\n  margin-bottom: 20px;\n  transition: all 250ms;\n\n  &.active {\n    visibility: visible;\n    opacity: 1;\n    transform: translateY(0px);\n  }\n\n  &:before {\n    content: '';\n    display: block;\n    position: absolute;\n    left: 50%;\n    bottom: -7.5px;\n    transform: translateX(-50%) rotate(45deg);\n    background: #1a2639;\n    width: 15px;\n    height: 15px;\n  }\n`;\n\nconst textarea = css`\n  width: 100%;\n  min-height: 120px;\n  padding: 15px;\n\n  background: #fff;\n  border-radius: 10px;\n  box-shadow: 2px 2px 3px rgba(0, 0, 0, 0.1);\n\n  border: 2px solid transparent;\n  resize: none;\n`;\n\nfunction Preview({ scrollbarState }: Props) {\n  const [styles, setStyles] = React.useState(\n    generateScrollbarStyles(scrollbarState),\n  );\n  const [isCopied, setIsCopied] = React.useState(false);\n  const copyRef = React.useRef<HTMLTextAreaElement>(null);\n\n  React.useEffect(() => {\n    setStyles(generateScrollbarStyles(scrollbarState));\n  }, [scrollbarState]);\n\n  function handleCopy(e: React.MouseEvent<HTMLButtonElement>) {\n    setIsCopied(true);\n    if (copyRef.current) {\n      copyRef.current.select();\n    }\n    document.execCommand('copy');\n    (e.target as HTMLButtonElement).focus();\n\n    setTimeout(() => {\n      setIsCopied(false);\n    }, 4000);\n  }\n\n  return (\n    <div\n      css={css`\n        ${wrapper} ${styles}\n      `}\n    >\n      <div className={isCopied ? 'active' : ''} css={copiedTooltip}>\n        Copied!\n      </div>\n      <textarea\n        value={styles?.join('')}\n        ref={copyRef}\n        spellCheck={false}\n        css={textarea}\n      ></textarea>\n      <button onClick={handleCopy} css={button}>\n        copy css\n      </button>\n      <div css={placeholder}></div>\n    </div>\n  );\n}\n\nexport default Preview;\n","/** @jsx jsx */\nimport React from 'react';\nimport { css, jsx } from '@emotion/core';\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nconst styles = css`\n  width: 100%;\n\n  @media (min-width: 960px) {\n    width: 40%;\n  }\n`;\n\nfunction Editor({ children }: Props) {\n  return <div css={styles}>{children}</div>;\n}\n\nexport default Editor;\n","/** @jsx jsx */\nimport React from 'react';\nimport { css, jsx } from '@emotion/core';\n\ntype Props = {\n  title: string | React.ReactNode;\n  children: React.ReactNode;\n};\n\nconst titleStyles = css`\n  color: #d9dad7;\n  font-weight: 900;\n  font-size: 32px;\n  text-transform: uppercase;\n  margin-bottom: 20px;\n\n  @media (min-width: 760px) {\n    font-size: 48px;\n  }\n\n  &:before {\n    content: '::';\n  }\n`;\n\nconst wrapperStyles = css``;\n\nfunction EditorItem({ title, children }: Props) {\n  return (\n    <div css={wrapperStyles}>\n      <h2 css={titleStyles}>{title}</h2>\n      {children}\n    </div>\n  );\n}\n\nexport default EditorItem;\n","/** @jsx jsx */\nimport React from 'react';\nimport { css, jsx } from '@emotion/core';\n\ntype Props = {\n  title: string | React.ReactNode;\n  children: React.ReactNode;\n};\n\nconst titleStyles = css`\n  font-weight: bold;\n  text-transform: uppercase;\n  font-size: 14px;\n  display: block;\n`;\n\nconst wrapperStyles = css`\n  width: 100%;\n  padding: 5px 10px;\n  background: #000;\n  border-radius: 10px;\n  margin: 0 10px 20px 10px;\n  background: linear-gradient(180deg, rgba(0, 0, 0, 0.29) 0%, #000000 100%);\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n\n  @media (min-width: 960px) {\n    width: calc(50% - 20px);\n  }\n  @media (min-width: 1440px) {\n    /* width: calc(33% - 20px); */\n  }\n`;\n\nconst childrenStyles = css`\n  margin: 10px 0;\n`;\n\nfunction Property({ title, children }: Props) {\n  return (\n    <div css={wrapperStyles}>\n      <span css={titleStyles}>{title}</span>\n      <div css={childrenStyles}>{children}</div>\n    </div>\n  );\n}\n\nexport default Property;\n","/** @jsx jsx */\nimport React from 'react';\nimport { jsx, css } from '@emotion/core';\n\ntype Props = {\n  children: React.ReactNode;\n  value: string;\n  onChange: (value: string) => void;\n};\n\ntype OptionProps = {\n  value: string | number;\n  children: React.ReactNode;\n};\n\nconst select = css`\n  border: 2px solid transparent;\n  border-radius: 5px;\n  background-color: #fff;\n`;\nconst option = css``;\n\nfunction Select({ value, onChange, children }: Props) {\n  function handleChange(e: React.ChangeEvent<HTMLSelectElement>) {\n    onChange(e.target.value);\n  }\n\n  return (\n    <select css={select} value={value} onChange={handleChange}>\n      {children}\n    </select>\n  );\n}\n\nfunction Option({ value, children }: OptionProps) {\n  return (\n    <option css={option} value={value}>\n      {children}\n    </option>\n  );\n}\n\nSelect.Option = Option;\n\nexport default Select;\n","/** @jsx jsx */\nimport React from 'react';\nimport { jsx, css } from '@emotion/core';\nimport Select from './controls/select';\nimport { ScrollProperty, PropertyKeys } from '../modules/types';\n\ntype Props = {\n  addProperty: (name: PropertyKeys) => void;\n  properties: ScrollProperty[];\n};\n\nconst wrapper = css`\n  display: flex;\n  select {\n    flex: 1;\n    padding: 7px 5px;\n    margin-right: 10px;\n  }\n  button {\n    min-width: 100px;\n    background-color: #4834ec;\n    color: #fff;\n    border: none;\n    border-radius: 5px;\n    cursor: pointer;\n    text-transform: uppercase;\n    font-weight: bold;\n    transition: opacity 250ms;\n\n    &:hover {\n      opacity: 0.7;\n    }\n  }\n`;\n\nfunction AddProperty({ addProperty, properties }: Props) {\n  const [selected, setSelected] = React.useState<string>(properties[0].name);\n\n  React.useEffect(() => {\n    setSelected(properties[0].name);\n  }, [properties]);\n\n  return (\n    <div css={wrapper}>\n      <Select value={selected} onChange={(value: string) => setSelected(value)}>\n        {properties.map((prop: ScrollProperty) => (\n          <Select.Option value={prop.name}>{prop.name}</Select.Option>\n        ))}\n      </Select>\n      <button onClick={() => addProperty(selected as PropertyKeys)}>add</button>\n    </div>\n  );\n}\n\nexport default AddProperty;\n","import { css } from '@emotion/core';\n\nconst Input = css`\n  border: none;\n  border-radius: 5px;\n  padding: 7px 5px;\n  font-weight: bold;\n  border: 2px solid transparent;\n`;\n\nexport default Input;\n","/** @jsx jsx */\nimport React from 'react';\nimport { jsx } from '@emotion/core';\nimport Input from './input';\n\ntype Props = {\n  value: number;\n  onChange: (value: number) => void;\n};\n\nfunction InputNumber({ value, onChange }: Props) {\n  function handleChange(e: React.ChangeEvent<HTMLInputElement>) {\n    onChange(Number(e.target.value));\n  }\n  return (\n    <input type=\"number\" css={Input} value={value} onChange={handleChange} />\n  );\n}\n\nexport default InputNumber;\n","export default class ColorPalette {\n  canvas: HTMLCanvasElement;\n  ctx: CanvasRenderingContext2D;\n\n  constructor(canvas: HTMLCanvasElement) {\n    this.canvas = canvas;\n    this.ctx = canvas.getContext('2d') as CanvasRenderingContext2D;\n  }\n\n  render() {\n    let gradient = this.ctx.createLinearGradient(0, 0, this.canvas.width, 0);\n    gradient.addColorStop(0, 'rgb(255, 0, 0)');\n    gradient.addColorStop(0.15, 'rgb(255, 0, 255)');\n    gradient.addColorStop(0.33, 'rgb(0, 0, 255)');\n    gradient.addColorStop(0.49, 'rgb(0, 255, 255)');\n    gradient.addColorStop(0.67, 'rgb(0, 255, 0)');\n    gradient.addColorStop(0.84, 'rgb(255, 255, 0)');\n    gradient.addColorStop(1, 'rgb(255, 0, 0)');\n\n    this.ctx.fillStyle = gradient;\n    this.ctx.fillRect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height);\n\n    gradient = this.ctx.createLinearGradient(0, 0, 0, this.canvas.height);\n    gradient.addColorStop(0, 'rgba(255, 255, 255, 1)');\n    gradient.addColorStop(0.5, 'rgba(255, 255, 255, 0)');\n    gradient.addColorStop(0.5, 'rgba(0, 0, 0, 0)');\n    gradient.addColorStop(1, 'rgba(0, 0, 0, 1)');\n\n    this.ctx.fillStyle = gradient;\n    this.ctx.fillRect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height);\n  }\n\n  getColor(x: number, y: number): number[] {\n    const imageData = this.ctx.getImageData(x, y, 1, 1);\n    const selectedColor = [\n      imageData.data[0],\n      imageData.data[1],\n      imageData.data[2],\n    ];\n    return selectedColor;\n  }\n}\n","/** @jsx jsx */\nimport React from 'react';\nimport { jsx, css } from '@emotion/core';\nimport { throttle } from 'throttle-debounce';\n\nimport ColorPalette from '../../utils/color-palette';\nimport { hexToRgb, rgbToHex } from '../../utils/color-utils';\n\ntype Props = {\n  onColorChange: (color: string) => void;\n  initialColor?: string;\n  onClose: () => void;\n};\n\nconst wrapper = css`\n  position: absolute;\n  left: 0;\n  top: -250px;\n\n  & > canvas {\n    border-radius: 10px;\n  }\n`;\n\nfunction ColorPaletteWindow({ onColorChange, onClose, initialColor }: Props) {\n  const ref = React.useRef<HTMLCanvasElement>(null);\n  const colorPaletteRef = React.useRef<ColorPalette | null>(null);\n  const [currentColor, setCurrentColor] = React.useState<number[]>(\n    hexToRgb(initialColor || '#ffffff'),\n  );\n\n  // ignore onColorChange dependency, it is not needed to be updated\n  React.useEffect(() => {\n    onColorChange(rgbToHex(currentColor));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentColor]);\n\n  React.useEffect(() => {\n    const canvas = ref.current!;\n    let colorPalette = colorPaletteRef.current!;\n\n    colorPalette = new ColorPalette(canvas);\n    colorPalette.render();\n    const unbindEvents = bindEvents();\n\n    function bindEvents() {\n      function handleClickOutside(e: any) {\n        if (!canvas.contains(e.target)) {\n          e.stopPropagation();\n          onClose();\n        }\n      }\n\n      function getColor(e: any) {\n        const x = e.pageX - canvas.getBoundingClientRect().left;\n        const y = e.pageY - canvas.getBoundingClientRect().top;\n\n        if (x <= canvas.width && x >= 0 && y <= canvas.height && y >= 0) {\n          const rgbArray = colorPalette.getColor(x, y);\n          setCurrentColor(rgbArray);\n        }\n      }\n\n      const throttledOnMousemove = throttle(50, getColor);\n\n      function onMousedown(e: any) {\n        getColor(e);\n        window.addEventListener('mousemove', throttledOnMousemove);\n      }\n\n      function onMouseup(e: any) {\n        window.removeEventListener('mousemove', throttledOnMousemove);\n      }\n\n      function onClick(e: any) {\n        handleClickOutside(e);\n      }\n\n      canvas.addEventListener('mousedown', onMousedown);\n      window.addEventListener('mouseup', onMouseup);\n      window.addEventListener('click', onClick);\n\n      return () => {\n        window.removeEventListener('click', onClick);\n        window.removeEventListener('mousemove', throttledOnMousemove);\n        window.removeEventListener('mouseup', onMouseup);\n        canvas.removeEventListener('mousedown', onMousedown);\n      };\n    }\n\n    return () => {\n      unbindEvents();\n    };\n  }, [onClose]);\n\n  return (\n    <div css={wrapper}>\n      <canvas ref={ref} width=\"250\" height=\"250\"></canvas>\n    </div>\n  );\n}\n\nexport default ColorPaletteWindow;\n","export function rgbToHex(rgb: number[]): string {\n  return '#' + rgb.map((x) => x.toString(16).padStart(2, '0')).join('');\n}\nexport function hexToRgb(hex: string): number[] {\n  var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n\n  return result && result.length > 0\n    ? [\n        parseInt(result[1], 16),\n        parseInt(result[2], 16),\n        parseInt(result[3], 16),\n      ]\n    : [255, 255, 255];\n}\n","/** @jsx jsx */\nimport React from 'react';\nimport { jsx, css } from '@emotion/core';\nimport InputNumber from './input-number';\nimport Select from './select';\nimport ColorPaletteWindow from './color-palette-window';\n\ntype Props = {\n  value: any;\n  onChange: (value: any) => void;\n};\n\nconst borderStyleOptions = [\n  'solid',\n  'dashed',\n  'dotted',\n  'groove',\n  'ridge',\n  'hidden',\n  'none',\n];\n\nconst wrapperStyles = css`\n  position: relative;\n  display: flex;\n\n  & > input {\n    flex: 1;\n    max-width: 70px;\n  }\n  & > select {\n    flex: 2;\n    border-radius: 5px;\n    border: none;\n    background-color: #fff;\n    margin: 0 10px;\n    padding: 0 5px;\n  }\n  & > button {\n    flex: 1;\n    border: none;\n    margin-right: 10px;\n    border-radius: 5px;\n  }\n`;\n\nfunction InputBorder({ value, onChange }: Props) {\n  const [isOpen, setIsOpen] = React.useState(false);\n\n  const handleColorChange = (color: string) => onChange({ color });\n\n  function handleWidthChange(width: number) {\n    onChange({ width });\n  }\n\n  function handleStyleChange(style: string) {\n    onChange({ style });\n  }\n\n  const handleClose = React.useCallback(() => setIsOpen(false), []);\n\n  return (\n    <div css={wrapperStyles}>\n      <InputNumber value={value.width} onChange={handleWidthChange} />\n      <Select value={value.style} onChange={handleStyleChange}>\n        {borderStyleOptions.map((style: string) => (\n          <Select.Option value={style}>{style}</Select.Option>\n        ))}\n      </Select>\n      <button\n        style={{ backgroundColor: value.color }}\n        onClick={() => setIsOpen(!isOpen)}\n      ></button>\n      {isOpen ? (\n        <ColorPaletteWindow\n          onClose={handleClose}\n          onColorChange={handleColorChange}\n          initialColor={value.color}\n        />\n      ) : null}\n    </div>\n  );\n}\n\nexport default InputBorder;\n","/** @jsx jsx */\nimport React from 'react';\nimport { jsx, css } from '@emotion/core';\nimport ColorPaletteWindow from './color-palette-window';\nimport Input from './input';\n\ntype Props = {\n  value: string;\n  onChange: (color: string) => void;\n};\n\nconst wrapperStyles = css`\n  position: relative;\n  display: flex;\n`;\nconst buttonStyles = css`\n  flex: 1;\n  border: none;\n  margin-right: 10px;\n  border-radius: 5px;\n  border: 2px solid transparent;\n`;\nconst inputStyles = css`\n  ${Input};\n  max-width: 70px;\n`;\n\nfunction InputColor({ value, onChange }: Props) {\n  const [isOpen, setIsOpen] = React.useState(false);\n\n  const handleColorChange = (color: string) => onChange(color);\n\n  const handleClose = React.useCallback(() => setIsOpen(false), []);\n\n  return (\n    <div css={wrapperStyles}>\n      <button\n        css={buttonStyles}\n        style={{ backgroundColor: value }}\n        onClick={(e: any) => {\n          setIsOpen(!isOpen);\n        }}\n      ></button>\n      <input\n        css={inputStyles}\n        type=\"text\"\n        value={value}\n        onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n          handleColorChange(e.target.value)\n        }\n      />\n      {isOpen ? (\n        <ColorPaletteWindow\n          onClose={handleClose}\n          initialColor={value}\n          onColorChange={handleColorChange}\n        />\n      ) : null}\n    </div>\n  );\n}\n\nexport default InputColor;\n","/** @jsx jsx */\nimport React from 'react';\nimport { jsx, css } from '@emotion/core';\nimport { throttle } from 'throttle-debounce';\n\ntype Props = {\n  value: number;\n  onChange: (value: number) => void;\n  min: number;\n  max: number;\n};\n\nconst slider = css`\n  width: 100%;\n  position: relative;\n  height: 12px;\n  touch-action: none;\n  cursor: pointer;\n  padding: 4px 0;\n`;\nconst rail = css`\n  position: absolute;\n  height: 4px;\n  width: 100%;\n  border-radius: 2px;\n  background-color: #ebebeb;\n`;\nconst track = css`\n  left: 0%;\n  right: auto;\n\n  background-color: #4834ec;\n  border-radius: 4px;\n  position: absolute;\n  height: 4px;\n`;\nconst thumb = css`\n  right: auto;\n  transform: translateX(-50%);\n  position: absolute;\n  width: 14px;\n  height: 14px;\n  margin-top: -5px;\n  background-color: #4834ec;\n  box-shadow: 0px 0px 5px rgba(0, 0, 0, 0.25);\n  border-radius: 50%;\n  cursor: pointer;\n`;\n\nfunction Range(props: Props) {\n  // TODO: implement min\n  const { max, value, onChange } = props;\n  const ref = React.useRef<HTMLDivElement>(null);\n  const [isMousedown, setIsMousedown] = React.useState(false);\n\n  React.useEffect(() => {\n    const currentRef = ref.current;\n\n    const left = currentRef?.getBoundingClientRect().left || 0;\n    const width = currentRef?.getBoundingClientRect().width || 0;\n\n    function onMousedown(e: any) {\n      setIsMousedown(true);\n      onChange(((e.clientX - left) / width) * max);\n    }\n\n    function onMouseup() {\n      if (isMousedown) {\n        setIsMousedown(false);\n      }\n    }\n\n    const onMousemove = throttle(20, (e: any) => {\n      // checking if clicked on ref element\n      // and if clientX not greater than width of ref element\n      if (isMousedown && e.clientX <= width + left && e.clientX >= left) {\n        onChange(((e.clientX - left) / width) * max);\n      }\n    });\n\n    if (currentRef) {\n      currentRef.addEventListener('mousedown', onMousedown);\n      window.addEventListener('mouseup', onMouseup);\n      window.addEventListener('mousemove', onMousemove);\n    }\n\n    return () => {\n      if (currentRef) {\n        currentRef.removeEventListener('mousedown', onMousedown);\n        window.removeEventListener('mouseup', onMouseup);\n        window.removeEventListener('mousemove', onMousemove);\n      }\n    };\n  }, [max, isMousedown, onChange]);\n\n  const width = (value / max) * 100 > 100 ? 100 : (value / max) * 100;\n\n  return (\n    <div css={slider} ref={ref}>\n      <div css={rail}></div>\n      <div css={track} style={{ width: `${width}%` }}></div>\n      <div css={thumb} style={{ left: `${width}%` }}></div>\n    </div>\n  );\n}\n\nexport default Range;\n","/** @jsx jsx */\nimport { jsx, css } from '@emotion/core';\n\nimport Range from './range';\nimport InputNumber from './input-number';\n\ntype Props = {\n  value: number;\n  onChange: (val: number) => void;\n};\n\nconst wrapper = css`\n  display: flex;\n  align-items: center;\n\n  & > input {\n    margin-left: 20px;\n    max-width: 50px;\n  }\n`;\n\nfunction InputRange({ value, onChange }: Props) {\n  return (\n    <div css={wrapper}>\n      <Range min={0} max={20} value={value} onChange={onChange} />\n      <InputNumber value={value} onChange={onChange} />\n    </div>\n  );\n}\n\nexport default InputRange;\n","/** @jsx jsx */\nimport { css, jsx } from '@emotion/core';\nimport { ScrollProperty, PropertyKeys } from '../modules/types';\nimport Property from './property';\nimport AddProperty from './add-property';\nimport InputBorder from './controls/input-border';\nimport InputColor from './controls/input-color';\nimport InputRange from './controls/input-range';\n\ntype Props = {\n  properties: any;\n  updateProperty: any;\n  addProperty: (name: PropertyKeys) => void;\n  removeProperty: () => void;\n};\n\nconst styles = css`\n  display: flex;\n  margin: 0 -10px;\n  flex-wrap: wrap;\n`;\n\nfunction Properties(props: Props) {\n  const { properties, updateProperty, addProperty } = props;\n\n  const inActiveProperties = properties.filter(\n    (prop: ScrollProperty) => !prop.active,\n  );\n\n  function renderProperty(prop: ScrollProperty) {\n    const type = prop.name;\n\n    switch (type) {\n      case 'border':\n        return (\n          <InputBorder\n            value={prop.value}\n            onChange={(value: any) =>\n              updateProperty({\n                name: type,\n                value: {\n                  ...prop.value,\n                  ...value,\n                },\n              })\n            }\n          />\n        );\n      case 'background-color':\n        return (\n          <InputColor\n            value={prop.value}\n            onChange={(color: string) =>\n              updateProperty({\n                name: type,\n                value: color,\n              })\n            }\n          />\n        );\n      case 'width':\n      case 'border-radius':\n        return (\n          <InputRange\n            value={prop.value}\n            onChange={(value: number) =>\n              updateProperty({\n                name: type,\n                value: Math.round(value),\n              })\n            }\n          />\n        );\n      default:\n        return null;\n    }\n  }\n  return (\n    <div css={styles}>\n      {properties.map((prop: ScrollProperty) =>\n        prop.active ? (\n          <Property title={prop.name}>{renderProperty(prop)}</Property>\n        ) : null,\n      )}\n      {inActiveProperties.length > 0 ? (\n        <Property title=\"add new property\">\n          <AddProperty\n            addProperty={addProperty}\n            properties={inActiveProperties}\n          />\n        </Property>\n      ) : null}\n    </div>\n  );\n}\n\nexport default Properties;\n","import React from 'react';\n\nimport Layout from './layout';\n\nimport reducer, { initialState } from '../modules/reducer';\nimport { ScrollItem, PropertyKeys } from '../modules/types';\nimport Preview from './preview';\nimport Editor from './editor';\nimport EditorItem from './editor-item';\nimport Properties from './properties';\nimport { updateAction, addAction } from '../modules/actions';\n\nconst App = () => {\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n\n  const updateProperty = React.useCallback(\n    (scrollName: string, payload: any) =>\n      dispatch(updateAction(scrollName, payload)),\n    [],\n  );\n\n  const addProperty = React.useCallback(\n    (scrollName: string, name: PropertyKeys) =>\n      dispatch(addAction(scrollName, name)),\n    [],\n  );\n\n  return (\n    <Layout>\n      <Preview scrollbarState={state} />\n      <Editor>\n        {Object.values(state).map((item: ScrollItem) => (\n          <EditorItem title={item.name}>\n            <Properties\n              properties={Object.values(item.props)}\n              updateProperty={(payload: any) =>\n                updateProperty(item.name, payload)\n              }\n              addProperty={(name: PropertyKeys) => addProperty(item.name, name)}\n              removeProperty={() => {}}\n            />\n          </EditorItem>\n        ))}\n      </Editor>\n    </Layout>\n  );\n};\n\nexport default App;\n","import { ActionTypes, ScrollProperty, PropertyKeys } from './types';\n\nexport const updateAction = (option: string, payload: ScrollProperty) =>\n  ({\n    type: ActionTypes.UPDATE_PROPERTY,\n    option,\n    payload,\n  } as const);\n\nexport const addAction = (option: string, name: PropertyKeys) =>\n  ({\n    type: ActionTypes.ADD_PROPERTY,\n    option,\n    payload: {\n      name,\n    },\n  } as const);\n\nexport type Action = ReturnType<typeof updateAction | typeof addAction>;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}